// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package shopping_store_v2

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// ShoppingStoreV2Client is the client API for ShoppingStoreV2 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ShoppingStoreV2Client interface {
	AddStaff(ctx context.Context, in *AddStaffRequest, opts ...grpc.CallOption) (*AddStaffResponse, error)
}

type shoppingStoreV2Client struct {
	cc grpc.ClientConnInterface
}

func NewShoppingStoreV2Client(cc grpc.ClientConnInterface) ShoppingStoreV2Client {
	return &shoppingStoreV2Client{cc}
}

func (c *shoppingStoreV2Client) AddStaff(ctx context.Context, in *AddStaffRequest, opts ...grpc.CallOption) (*AddStaffResponse, error) {
	out := new(AddStaffResponse)
	err := c.cc.Invoke(ctx, "/shopping_store_v2.ShoppingStoreV2/AddStaff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShoppingStoreV2Server is the server API for ShoppingStoreV2 service.
// All implementations must embed UnimplementedShoppingStoreV2Server
// for forward compatibility
type ShoppingStoreV2Server interface {
	AddStaff(context.Context, *AddStaffRequest) (*AddStaffResponse, error)
	mustEmbedUnimplementedShoppingStoreV2Server()
}

// UnimplementedShoppingStoreV2Server must be embedded to have forward compatible implementations.
type UnimplementedShoppingStoreV2Server struct {
}

func (UnimplementedShoppingStoreV2Server) AddStaff(context.Context, *AddStaffRequest) (*AddStaffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStaff not implemented")
}
func (UnimplementedShoppingStoreV2Server) mustEmbedUnimplementedShoppingStoreV2Server() {}

// UnsafeShoppingStoreV2Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ShoppingStoreV2Server will
// result in compilation errors.
type UnsafeShoppingStoreV2Server interface {
	mustEmbedUnimplementedShoppingStoreV2Server()
}

func RegisterShoppingStoreV2Server(s grpc.ServiceRegistrar, srv ShoppingStoreV2Server) {
	s.RegisterService(&ShoppingStoreV2_ServiceDesc, srv)
}

func _ShoppingStoreV2_AddStaff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddStaffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShoppingStoreV2Server).AddStaff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shopping_store_v2.ShoppingStoreV2/AddStaff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShoppingStoreV2Server).AddStaff(ctx, req.(*AddStaffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ShoppingStoreV2_ServiceDesc is the grpc.ServiceDesc for ShoppingStoreV2 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ShoppingStoreV2_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "shopping_store_v2.ShoppingStoreV2",
	HandlerType: (*ShoppingStoreV2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddStaff",
			Handler:    _ShoppingStoreV2_AddStaff_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shopping_store_v2.proto",
}
